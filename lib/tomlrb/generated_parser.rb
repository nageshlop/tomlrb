#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.5.1
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Tomlrb
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,    47,    16,    45,    17,    46,    18,    50,    51,    19,
    20,    14,    21,    22,    23,    24,     8,     4,    10,    88,
    87,    12,    25,    43,    73,    74,    75,    76,    71,    72,
    67,    68,    64,    65,    66,    69,    70,    54,    40,    58,
    48,    55,    12,    73,    74,    75,    76,    71,    72,    67,
    68,    64,    65,    66,    69,    70,    43,    79,    58,    84,
    85,    12,    73,    74,    75,    76,    71,    72,    67,    68,
    64,    65,    66,    69,    70,    92,    45,    58,    90,   nil,
    12,    73,    74,    75,    76,    71,    72,    67,    68,    64,
    65,    66,    69,    70,    92,   nil,    58,    90,   nil,    12,
    73,    74,    75,    76,    71,    72,    67,    68,    64,    65,
    66,    69,    70,    92,   nil,    58,    90,   nil,    12,    73,
    74,    75,    76,    71,    72,    67,    68,    64,    65,    66,
    69,    70,    92,   nil,    58,    90,    31,    12,    32,   nil,
    33,   nil,   nil,    34,    35,    29,    36,    37,    38,    39,
    31,   nil,    32,    27,    33,   nil,   nil,    34,    35,    82,
    36,    37,    38,    39,    16,   nil,    17,    27,    18,   nil,
   nil,    19,    20,    78,    21,    22,    23,    24,    97,   nil,
   nil,    95,   nil,   nil,   nil,    96 ]

racc_action_check = [
     1,    13,     1,    11,     1,    13,     1,    28,    28,     1,
     1,     1,     1,     1,     1,     1,     1,     1,     1,    56,
    56,     1,     2,    11,    46,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    46,    46,    46,    44,    10,    46,
    27,    44,    46,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    42,    50,    55,    53,
    54,    55,    57,    57,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    84,    57,    57,   nil,
    57,    92,    92,    92,    92,    92,    92,    92,    92,    92,
    92,    92,    92,    92,    92,   nil,    92,    92,   nil,    92,
    96,    96,    96,    96,    96,    96,    96,    96,    96,    96,
    96,    96,    96,    96,   nil,    96,    96,   nil,    96,    97,
    97,    97,    97,    97,    97,    97,    97,    97,    97,    97,
    97,    97,    97,   nil,    97,    97,     9,    97,     9,   nil,
     9,   nil,   nil,     9,     9,     9,     9,     9,     9,     9,
    51,   nil,    51,     9,    51,   nil,   nil,    51,    51,    51,
    51,    51,    51,    51,    47,   nil,    47,    51,    47,   nil,
   nil,    47,    47,    47,    47,    47,    47,    47,    91,   nil,
   nil,    91,   nil,   nil,   nil,    91 ]

racc_action_pointer = [
   nil,     0,    22,   nil,   nil,   nil,   nil,   nil,   nil,   134,
    20,     1,   nil,   -19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   -12,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    34,   nil,    17,   nil,    21,   162,   nil,   nil,
    38,   148,   nil,    36,    58,    40,     3,    59,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    74,   nil,   nil,   nil,   nil,   nil,
   nil,   162,    78,   nil,   nil,   nil,    97,   116,   nil,   nil,
   nil ]

racc_action_default = [
    -1,   -82,   -82,    -2,    -3,    -4,    -5,    -6,    -7,   -82,
   -10,   -82,   -32,   -82,   -44,   -45,   -46,   -47,   -48,   -49,
   -50,   -51,   -52,   -53,   -54,   101,    -8,   -12,   -82,   -19,
   -20,   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -29,
    -9,   -30,   -82,   -33,   -82,   -38,   -68,   -82,   -11,   -13,
   -15,   -82,   -31,   -34,   -82,   -68,   -82,   -68,   -62,   -63,
   -64,   -65,   -66,   -67,   -69,   -70,   -71,   -72,   -73,   -74,
   -75,   -76,   -77,   -78,   -79,   -80,   -81,   -42,   -43,   -14,
   -16,   -17,   -18,   -35,   -82,   -37,   -39,   -40,   -41,   -55,
   -56,   -82,   -68,   -36,   -57,   -59,   -68,   -68,   -58,   -60,
   -61 ]

racc_goto_table = [
    42,    15,    26,    30,    41,    56,     1,     3,     5,     6,
     7,    89,     9,    49,    86,    53,    83,    13,    94,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    52,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    80,    81,    98,    77,   nil,   nil,
    99,   100,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    93 ]

racc_goto_check = [
    13,    19,     7,    10,    12,    17,     1,     2,     3,     4,
     5,    22,     6,     9,    17,    15,    16,    18,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,    10,    22,    19,   nil,   nil,
    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    13 ]

racc_goto_pointer = [
   nil,     6,     6,     7,     8,     9,    11,    -7,   nil,   -15,
    -6,   nil,    -7,   -11,   nil,   -29,   -37,   -41,    16,     0,
   nil,   nil,   -46,   -73,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    61,   nil,   nil,    28,   nil,
   nil,    11,   nil,   nil,    44,   nil,   nil,    91,   nil,   nil,
    60,    57,   nil,   nil,    59,    62,    63 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 26, :_reduce_none,
  2, 26, :_reduce_none,
  2, 26, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  2, 28, :_reduce_none,
  2, 31, :_reduce_9,
  1, 31, :_reduce_10,
  2, 32, :_reduce_11,
  1, 32, :_reduce_12,
  2, 32, :_reduce_none,
  2, 34, :_reduce_14,
  1, 34, :_reduce_15,
  2, 34, :_reduce_none,
  3, 33, :_reduce_17,
  3, 33, :_reduce_18,
  1, 33, :_reduce_19,
  1, 33, :_reduce_20,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  2, 30, :_reduce_none,
  3, 30, :_reduce_none,
  1, 36, :_reduce_32,
  1, 37, :_reduce_33,
  2, 38, :_reduce_none,
  3, 38, :_reduce_none,
  2, 41, :_reduce_none,
  3, 39, :_reduce_37,
  1, 39, :_reduce_38,
  2, 40, :_reduce_none,
  4, 29, :_reduce_40,
  4, 29, :_reduce_41,
  3, 43, :_reduce_42,
  3, 43, :_reduce_43,
  1, 43, :_reduce_44,
  1, 43, :_reduce_45,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  2, 45, :_reduce_none,
  1, 47, :_reduce_56,
  2, 47, :_reduce_none,
  2, 47, :_reduce_none,
  1, 48, :_reduce_59,
  2, 48, :_reduce_none,
  2, 48, :_reduce_none,
  1, 46, :_reduce_62,
  1, 42, :_reduce_63,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  0, 51, :_reduce_none,
  1, 51, :_reduce_69,
  1, 51, :_reduce_70,
  1, 51, :_reduce_71,
  1, 51, :_reduce_72,
  1, 51, :_reduce_73,
  1, 51, :_reduce_74,
  1, 51, :_reduce_75,
  1, 51, :_reduce_76,
  1, 51, :_reduce_77,
  1, 50, :_reduce_78,
  1, 50, :_reduce_79,
  1, 50, :_reduce_80,
  1, 50, :_reduce_81 ]

racc_reduce_n = 82

racc_shift_n = 101

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :STRING_MULTI => 3,
  :STRING_BASIC => 4,
  :STRING_LITERAL_MULTI => 5,
  :STRING_LITERAL => 6,
  :DATETIME => 7,
  :LOCAL_TIME => 8,
  :INTEGER => 9,
  :NON_DEC_INTEGER => 10,
  :FLOAT => 11,
  :FLOAT_INF => 12,
  :FLOAT_NAN => 13,
  :TRUE => 14,
  :FALSE => 15,
  :NEWLINE => 16,
  :EOS => 17,
  "[" => 18,
  "]" => 19,
  "." => 20,
  "{" => 21,
  "}" => 22,
  "," => 23,
  "=" => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "STRING_MULTI",
  "STRING_BASIC",
  "STRING_LITERAL_MULTI",
  "STRING_LITERAL",
  "DATETIME",
  "LOCAL_TIME",
  "INTEGER",
  "NON_DEC_INTEGER",
  "FLOAT",
  "FLOAT_INF",
  "FLOAT_NAN",
  "TRUE",
  "FALSE",
  "NEWLINE",
  "EOS",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\"=\"",
  "$start",
  "expressions",
  "expression",
  "table",
  "assignment",
  "inline_table",
  "table_start",
  "table_continued",
  "table_identifier",
  "table_next",
  "table_identifier_component",
  "inline_table_start",
  "inline_table_end",
  "inline_continued",
  "inline_assignment_key",
  "inline_assignment_value",
  "inline_next",
  "value",
  "assignment_key",
  "assignment_key_component",
  "array",
  "start_array",
  "array_continued",
  "array_next",
  "scalar",
  "string",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_9(val, _values, result)
     @handler.start_(:array_of_tables)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_10(val, _values, result)
     @handler.start_(:table)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_11(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_12(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array)
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_14(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_15(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array)
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 31)
  def _reduce_17(val, _values, result)
     @handler.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_18(val, _values, result)
     val[2].split('.').each { |k| @handler.push(k) }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_19(val, _values, result)
          keys = val[0].split('.')
      @handler.start_(:table)
      keys.each { |key| @handler.push(key) }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_20(val, _values, result)
     @handler.push(val[0])
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_32(val, _values, result)
     @handler.start_(:inline)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_33(val, _values, result)
          array = @handler.end_(:inline)
      array.map!.with_index{ |n,i| i.even? ? n.to_sym : n } if @handler.symbolize_keys
      @handler.push(Hash[*array])

    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_37(val, _values, result)
          array = @handler.end_(:inline)
      array.each { |key| @handler.push(key) }
      @handler.start_(:inline)
      @handler.push(val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_38(val, _values, result)
     @handler.push(val[0])
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_40(val, _values, result)
          keys = @handler.end_(:keys)
      @handler.push(keys.pop)
      @handler.assign(keys)

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_41(val, _values, result)
          keys = @handler.end_(:keys)
      @handler.push(keys.pop)
      @handler.assign(keys)

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_42(val, _values, result)
     @handler.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_43(val, _values, result)
     val[2].split('.').each { |k| @handler.push(k) }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_44(val, _values, result)
          keys = val[0].split('.')
      @handler.start_(:keys)
      keys.each { |key| @handler.push(key) }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_45(val, _values, result)
     @handler.start_(:keys); @handler.push(val[0])
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_56(val, _values, result)
     array = @handler.end_(:array); @handler.push(array)
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_59(val, _values, result)
     array = @handler.end_(:array); @handler.push(array)
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_62(val, _values, result)
     @handler.start_(:array)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_63(val, _values, result)
     @handler.push(val[0])
    result
  end
.,.,

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_69(val, _values, result)
     result = val[0].to_f
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_70(val, _values, result)
     result = (val[0][0] == '-' ? -1 : 1) * Float::INFINITY
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_71(val, _values, result)
     result = Float::NAN
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 146)
  def _reduce_72(val, _values, result)
     result = val[0].to_i
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_73(val, _values, result)
          base = case val[0][1]
             when "x" then 16
             when "o" then 8
             when "b" then 2
             end
      result = val[0].to_i(base)

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_74(val, _values, result)
     result = true
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_75(val, _values, result)
     result = false
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_76(val, _values, result)
          v = val[0]
      result = if v[6].nil?
                 if v[4].nil?
                   LocalDate.new(v[0], v[1], v[2])
                 else
                   LocalDateTime.new(v[0], v[1], v[2], v[3] || 0, v[4] || 0, v[5].to_f)
                 end
               else
                 Time.new(v[0], v[1], v[2], v[3] || 0, v[4] || 0, v[5].to_f, v[6])
               end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 169)
  def _reduce_77(val, _values, result)
     result = LocalTime.new(*val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_78(val, _values, result)
     result = StringUtils.replace_escaped_chars(StringUtils.multiline_replacements(val[0]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_79(val, _values, result)
     result = StringUtils.replace_escaped_chars(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_80(val, _values, result)
     result = StringUtils.strip_spaces(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_81(val, _values, result)
     result = val[0]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
end   # module Tomlrb
